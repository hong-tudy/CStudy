Q. DNS의 동작 방식에 대해서 설명해주세요.

- 정답
    
    도메인 네임 시스템 (Domain Name System, DNS) 은 호스트의 도메인네임 ([www.example.com](http://www.example.com/))을 네트워크주소(192.168.1.0)로 변환하거나, 그 반대의 역할을 수행하는 시스템이다.
    
    DNS는 컴퓨터들이 문자열 도메인을 통해서도 최종 목적지까지 도달할 수 있도록 IP 주소와 도메인을 매핑해놓은 주소 체계입니다.
    사용자가 도메인 주소를 브라우저 창에 입력하여 요청을 보내면, 우선 로컬 컴퓨터의 캐시에 해당 도메인의 IP가 저장되어 있는지 확인합니다.
    있는 경우 바로 해당 IP 주소로 패킷을 전송하고, 없는 경우 연결된 Root DNS 서버에 원하는 domain 의 IP 주소가 존재하는지 묻는 쿼리를 보냅니다.
    Root DNS 서버는 도메인의 TDL 정보를 가지고 있는 하위 DNS 서버의 IP를 요청하고, 이 쿼리는 최종 도메인의 IP 주소를 받을 때까지 반복됩니다.
    마지막으로 IP 주소를 로컬 DNS와 브라우저 PC에 캐싱하면, 로컬 컴퓨터는 그 이후에야 해당 IP 주소로 패킷을 보낸다.
    쉽게 말해서, DNS 서버에 원하는 도메인에 해당하는 IP 주소를 요청하고 확인이 된 후에 데이터를 입력 및 전송할 수 있습니다.
    

Q. 데이터 송수신 과정에서 캡슐화와 비캡슐화 과정에 대해 설명해주세요.

- 정답
    
    캡슐화 과정은 상위 계층의 헤더와 데이터를 하위 계층의 데이터 부분에 포함시키고 해당 계층의 헤더를 붙여 가는 과정입니다.
    사용자의 데이터 요청이 발생하면 애플리케이션 계층의 데이터가 전송 계층으로 전달되면서 세크먼트, 또는 데이터그램화가 되며 TCP 헤더가 붙여지게 되고,
    이후 인터넷 계층으로 가면서 IP 헤더가 붙여지며 패킷화 됩니다.
    이후 링크 계층으로 전달되면서 프레임 헤더와 프레임 트레일러가 붙어 프레임화가 되면서 캡슐화 과정을 마치게 됩니다.
    비캡슐화는 반대로 하위 계층에서 상위 계층으로 가며 각 계층의 헤더 부분을 제거하는 과정입니다.
    캡슐화된 데이터를 송신 측에서 받게되면 비캡슐화 과정을 통해 최종적으로 애플리케이션 계층의 메시지로 전달됩니다.
    

Q. 공인(public) IP와 사설(private) IP의 차이에 대해 설명해주세요.

- 정답
    
    **공인 IP는 ISP(인터넷 서비스 공급자)가 제공하는 IP 주소이며, 외부에 공개되어 있는 IP주소 입니다.**
    
    **사설 IP는 일반 가정이나 회사 내 등에 할당된 네트워크 IP 주소이며, IPv4의 주소부족으로 인해 서브넷팅된 IP이기 때문에 라우터(공유기)에 의해 로컬 네트워크상의 PC나 장치에 할당됩니다.**
    
    **사설 IP 주소만으로는 인터넷에 직접 연결할 수 없고, 라우터를 통해 1개의 공인 IP를 할당하고, 라우터에 연결된 개인 PC는 사설 IP를 각각 할당 받아 인터넷에 접속 할 수 있습니다.**
    

Q. ARP가 주소를 찾는 과정을 설명해주세요.

- 정답
    - ARP : 논리적인 IP주소를 물리적인 MAC주소로 바꿔주는 역할을 하는 주소 해석 프로토콜
    - **같은 네트워크에 있을 때**
        - A가 B와 통신하기 위해 같은 네트워크 대역에 ARP 요청을 브로드캐스트(Broadcast) 방식 (A 단말이 전송한 데이터가 네트워크에 연결된 모든 단말에 전송)으로 B의 `10.0.0.2/24 IP 주소`를 가진 단말이 있는지 물어봅니다
        - 네트워크 스위치 장비는 A의 `MAC 주소(00:11:BB:00:00:AA)`를 자신의 MAC 주소 테이블에 저장합니다.
        - 네트워크 스위치 장비가 ARP 요청을 받고나서 자신이 가지고 있는 MAC 테이블에 B의 IP 주소 `10.0.0.2/24`에 대한 `MAC 주소(00:11:BB:00:00:BB)`가 저장되어 있다면, A에게 B의 IP 주소 `10.0.0.2/24`의 `MAC 주소(00:11:BB:00:00:BB)`를 알려줍니다.
        - 네트워크 스위치 장비가 ARP 요청을 받고나서 자신이 가지고 있는 MAC 테이블에 B의 IP 주소 `10.0.0.2/24`의 `MAC 주소 (00:11:BB:00:00:BB)`가 저장되어 있지 않다면, 반대편의 B까지 ARP 요청이 전달됩니다. 이후 B는 ARP 요청을 받은 다음 자신의 IP 주소가 목적지에 기록되어 있음을 확인한 후 자신의 `MAC 주소(00:11:BB:00:00:BB)`를 알려주는 응답을 합니다.
    - **같은 네트워크에 없을 때**
        - A가 B와 통신하기 위해 같은 네트워크 대역에 ARP 요청을 브로드캐스트(Broadcast) 방식으로 B의 `20.0.0.1/24 IP 주소`를 가진 단말이 있는지 물어봅니다. (IP 주소와 MAC 주소를 비교해서 확인해달라는 요청)A는 상대방 B의 MAC 주소를 모르기 때문에 MAC 주소는 일단 기본 게이트웨이`(FF:FF:FF:FF:FF:FF)`로 기록합니다.
        - 라우터는 해당 ARP 요청을 받고 (목적지가 게이트웨이의 MAC 주소이므로) 목적지 B의 IP 주소가 같은 네트워크에 있지 않기 때문에 같은 네트워크 대역대에 있는 라우터 자신의 인터페이스 `MAC 주소(00:00:00:00:RR:00)`로 응답해줍니다.
        - A는 B와 통신하기 위해 다시 라우터에게 B의 목적지 IP 주소 20.0.0.1/24와 같은 네트워크 대역의 라우터 인터페이스 MAC 주소(00:00:00:00:RR:00)를 목적지로 ARP 요청을 보냅니다.
        - 라우터는 해당 네트워크 대역까지 패킷을 보냅니다.단, 라우터도 목적지 B의 MAC 주소를 모르므로 해당 네트워크 대역대에 Broadcast 메세지로 20.0.0.1/24 IP 주소를 가진 단말이 있는지 물어봅니다.
        - B 단말이 자신의 IP 주소가 목적지로 되어 있는 패킷을 보고 라우터에게 자신의 MAC 주소(00:11:BB:00:00:BB)를 포함하여 응답합니다.
        - 이 후 라우터를 통해 A와 B가 통신을 시작합니다.
        - MAC 주소를 어렵게 얻어왔으므로, 각 단말은 방금 통신한 IP 주소의 MAC 주소를 일정 시간 동안 보관하여 활용합니다. 이를 ARP캐시(Cache)라고 합니다.

Q. 통신을 할 때 MAC주소와 IP주소가 모두 필요한 이유는?

- 정답
    
    사람의 주민등록번호는 MAC 주소, 사람의 이름은 MAC 주소에 매핑되는 IP 주소, 그 사람의 별명은 IP 주소와 매핑되는 호스트 이름이라고 생각해봅시다. 우리는 일상에서 누군가를 지목할 때, 그의 주민등록번호를 부르지 않습니다.
    
    - IP 주소로만 통신하면 안될까?
    
    랜선을 찾아가는 라우팅 기법은 패킷에 포함된 IP Address를 추적해서 최단 경로를 선택해 가게 되어있습니다. IP Address는 논리적인 주소이기 때문에 이 IP에서 IP Address로 목표된 네트워크로 추적해서 패킷을 보낸 뒤 그곳에서 그 IP에 등록된 MAC ADdress로 주소가 변환되어 그 컴퓨터로 패킷을 전송하게 됩니다.
    
    **→IP는 라우팅하는 주소이고 실질적인 통신은 MAC Address로 합니다!**
    
    - MAC 주소로만 통신하면 안될까?
    
    집에서 naver.com의 웹서버를 찾는다고 가정하면, ISP 내의 모든 라우터들은 전 세계 모든 서버들의 MAC 주소를 다 가지고 있어야 합니다. 즉, 하나하나 MAC 주소에 대해 라우팅 해주어야 합니다. 이건 불가능합니다. 하지만 IP 주소 체계는 변경 가능하고, IP주소는 연속성을 갖기 때문에 IP 주소 다수를 한 줄로 지정해줄 수 있어서 편리합니다. 즉, 라우팅하는 데 효과적입니다.
    
    **→ MAC 주소는 하드웨어 고유 주소, 외우기 힘들고 라우팅도 힘듭니다!**
    

Q.  UDP는 언제 사용되나요?

- 정답
    
    UDP는 실시간 데이터 전송이 필요한 서비스에서 주로 사용됩니다. 이는 데이터 손실을 감안하고 연속성과 성능이 중요한 경우에 적합합니다.
    다음은 UDP를 사용하는 주요 분야입니다.
    
    인터넷 전화: 전송 실패 시 재전송을 위한 지연시간이 발생하여 송신자와 수신자 간의 싱크가 맞지 않을 수 있습니다.
    온라인 게임: 지연시간이 짧아야 하며, 지연이 점점 커지면 서비스 이용자에게 불쾌감을 주거나 올바른 연결이 이루어지지 않을 수 있습니다.
    멀티미디어 스트리밍: 싱크가 맞지 않으면 많은 문제가 발생할 수 있으며, 전송이 원활하지 않으면 연속적인 재생 서비스를 제공받지 못할 수 있습니다.
    
    UDP는 비연결형 서비스를 지원하는 프로토콜로, 데이터를 보낸다는 신호나 받는다는 신호의 절차를 거치지 않고 일방적으로 데이터를 전송합니다.
    이로 인해 데이터 송/수신 과정이 빠르고, 헤더 사이즈가 작아져 전송 속도가 빠릅니다. 따라서, 신뢰성보다는 연속성과 성능이 중요한 서비스에서 사용됩니다.
    

Q. naver.com에 접속할 때 생기는 과정?

- 정답
    
    ![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/daaf6a75-66ec-4016-bcc8-9527acc8181a/e8acc607-5720-4b42-a62b-f91ff1a0f920/Untitled.png)
    
    사용자가 브라우저에 URL([www.naver.com](http://www.naver.com/))을 입력
    DNS 서버에 도메인 네임으로 서버의 진짜 주소를 찾음
    IP 주소로 웹 서버에 TCP 3 handshake로 연결 수립
    클라이언트는 웹 서버로 HTTP 요청 메시지를 보냄
    웹 서버는 HTTP 응답 메시지를 보냄
    도착한 HTTP 응답 메세지는 웹 페이지 데이터로 변환되고, 웹 브라우저에 의해 출력
    
    [웹 브라우저에 URL을 입력하면 어떤 일이 생기나요? | Amazon Web Services](https://aws.amazon.com/ko/blogs/korea/what-happens-when-you-type-a-url-into-your-browser/)
    

Q. MAC과 IP주소의 차이점?

- 정답
    
    

[]()

Q. 라우팅 프로토콜에는 어떤 것들이 있나요?

- 정답
    - 라우팅 프로토콜에는 거리 벡터 라우팅 프로토콜(RIP), 링크 상태 라우팅 프로토콜(OSPF), 하이브리드 라우팅 프로토콜(EIGRP) 등이 있습니다. 이 프로토콜들은 네트워크 내에서 최적의 경로를 찾기 위해 사용됩니다.

Q. NAT(Network Address Translation)란 무엇이며, 그 유형에는 어떤 것들이 있나요?

- 정답
    - NAT는 사설 네트워크의 IP 주소를 공인 IP 주소로 변환하여 인터넷에 접속할 수 있도록 하는 기술입니다. 주요 유형으로는 Static NAT(하나의 사설 IP 주소를 하나의 공인 IP 주소에 매핑), Dynamic NAT(여러 사설 IP 주소를 공인 IP 주소 풀에서 동적으로 할당), 그리고 PAT(Port Address Translation, Overloading) 등이 있습니다.

Q 라우터와 게이트웨이 차이는?

- 정답
    
    **라우터**
    
    는 주로 LAN과 WAN을 연결(layer3)하는데 많이 사용되며,
    
    **게이트웨이**
    
    는 프로토콜이 다른 네트워크를 연결(layer4)할 때 주로 사용합니다.
    
    요즘에는 라우터와 게이트웨이 기능이 같이 있는 장비를 많이 사용하는 추세입니다.
    

Q. 캡슐화 역캡슐화 과정?

- 정답
    
    ### 데이터 캡슐화 과정
    
    1. **응용 계층 (Application Layer)**: 사용자가 작성한 데이터를 생성합니다.
    2. **표현 계층 (Presentation Layer)**: 데이터 형식 변환(예: 인코딩, 암호화 등) 및 데이터 압축을 수행합니다.
    3. **세션 계층 (Session Layer)**: 통신 세션을 관리하고 설정합니다.
    4. **전송 계층 (Transport Layer)**: 데이터를 세그먼트(segment)로 나누고, 각 세그먼트에 전송 제어 정보를 추가합니다. 이 과정에서 데이터가 쪼개집니다.
    5. **네트워크 계층 (Network Layer)**: 세그먼트에 네트워크 주소를 추가하여 패킷(packet)으로 캡슐화합니다.
    6. **데이터 링크 계층 (Data Link Layer)**: 패킷에 MAC 주소 등의 링크 계층 정보를 추가하여 프레임(frame)으로 캡슐화합니다.
    7. **물리 계층 (Physical Layer)**: 프레임을 비트(bit) 스트림으로 변환하여 실제 물리 매체로 전송합니다.
    
    ### 데이터 역캡슐화 과정
    
    1. **물리 계층 (Physical Layer)**: 비트 스트림을 받아들이고, 이를 프레임으로 변환합니다.
    2. **데이터 링크 계층 (Data Link Layer)**: 프레임에서 링크 계층 정보를 제거하고, 패킷을 상위 계층으로 전달합니다.
    3. **네트워크 계층 (Network Layer)**: 패킷에서 네트워크 주소 정보를 제거하고, 세그먼트를 상위 계층으로 전달합니다.
    4. **전송 계층 (Transport Layer)**: 세그먼트를 원래의 데이터로 재조립합니다. 이 과정에서 세그먼트가 원래의 데이터 스트림으로 병합됩니다.
    5. **세션 계층 (Session Layer)**: 통신 세션을 관리합니다.
    6. **표현 계층 (Presentation Layer)**: 데이터 형식 변환을 원래대로 복원합니다.
    7. **응용 계층 (Application Layer)**: 최종적으로 사용자가 이해할 수 있는 데이터로 변환하여 전달합니다.